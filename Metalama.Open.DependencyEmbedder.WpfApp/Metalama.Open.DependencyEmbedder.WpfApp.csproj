<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop">

    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net472</TargetFramework>
        <UseWPF>true</UseWPF>
        <!-- this property decides whether the weaver is referenced as a project (common for projects in the same solution) or as a NuGet package -->
        <UsePackageReference Condition="'$(UsePackageReference)' == ''">false</UsePackageReference>
    </PropertyGroup>

    <Choose>
        <When Condition="$(UsePackageReference) != 'true'">

            <!-- to reference the weaver as a project, we need to add these three references separately -->
            <!-- OutputItemType="Analyzer" on the two ProjectReferences is needed so that Metalama can execute the weaver at build time -->
            <!-- ReferenceOutputAssembly="false" ensures that this project does not have access to libraries that it shouldn't: Metalama SDK and Roslyn -->
            <ItemGroup>
                <ProjectReference Include="..\Metalama.Open.DependencyEmbedder.Weaver\Metalama.Open.DependencyEmbedder.Weaver.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false"/>
                <ProjectReference Include="..\Metalama.Open.DependencyEmbedder\Metalama.Open.DependencyEmbedder.csproj" OutputItemType="Analyzer"/>
                <PackageReference Include="Metalama.Framework" Version="$(MetalamaVersion)"/>
            </ItemGroup>

        </When>
        <Otherwise>

            <!-- to reference the weaver as a package, this one line is mostly enough -->
            <ItemGroup>
                <PackageReference Include="Metalama.Open.DependencyEmbedder" Version="0.1.0-preview"/>
            </ItemGroup>
            <!-- we also need to add a NuGet source that points to where the weaver package is located -->
            <!-- this is not necessary if the weaver package is on NuGet.org, or another configured package source -->
            <PropertyGroup>
                <RestoreAdditionalProjectSources>$(OutputPath)</RestoreAdditionalProjectSources>
            </PropertyGroup>

        </Otherwise>
    </Choose>

</Project>
